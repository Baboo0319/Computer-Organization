$date
   Tue Dec  3 12:35:54 2024
$end
$version
  2019.2
$end
$timescale
  1ps
$end
$scope module ControlUnit_sim $end
$var reg 6 ! OpCode [5:0] $end
$var reg 6 " func [5:0] $end
$var reg 1 # zero $end
$var reg 1 $ sign $end
$var wire 1 % PCWire $end
$var wire 1 & ALUSrcA $end
$var wire 1 ' ALUSrcB $end
$var wire 1 ( DBDataSrc $end
$var wire 1 ) RegWire $end
$var wire 1 * InsMemRW $end
$var wire 1 + RD $end
$var wire 1 , WR $end
$var wire 1 - RegDst $end
$var wire 1 . ExtSel $end
$var wire 2 / PCSrc [1:0] $end
$var wire 3 0 ALUOp [2:0] $end
$scope module uut $end
$var wire 6 1 OpCode [5:0] $end
$var wire 6 2 func [5:0] $end
$var wire 1 3 zero $end
$var wire 1 4 sign $end
$var wire 1 % PCWire $end
$var wire 1 & ALUSrcA $end
$var wire 1 ' ALUSrcB $end
$var wire 1 ( DBDataSrc $end
$var wire 1 ) RegWire $end
$var wire 1 * InsMemRW $end
$var wire 1 + RD $end
$var wire 1 , WR $end
$var wire 1 . ExtSel $end
$var wire 1 - RegDst $end
$var wire 2 / PCSrc [1:0] $end
$var wire 3 0 ALUOp [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b100000 "
0#
0$
1%
0&
0'
0(
1)
1*
1+
0,
1-
1.
b0 /
b0 0
b0 1
b100000 2
03
04
$end
#50000
b0 !
b100010 "
b1 0
b100010 2
#100000
b1001 !
bx "
1'
0-
b0 0
b1001 1
bx 2
#150000
b1100 !
bx "
0.
b100 0
b1100 1
#200000
b0 !
b100100 "
0'
1-
1.
b0 1
b100100 2
#250000
b1101 !
bx "
1'
0-
0.
b11 0
b1101 1
bx 2
#300000
b0 !
b100101 "
0'
1-
1.
b0 1
b100101 2
#350000
b0 !
b0 "
1&
b10 0
b0 2
#400000
b1010 !
bx "
0&
1'
0-
b110 0
b1010 1
bx 2
#450000
b101011 !
bx "
0)
1,
1-
b0 0
b101011 1
#500000
b100011 !
bx "
1(
1)
0+
0,
0-
b100011 1
#550000
b100 !
bx "
1#
0'
0(
0)
1+
1-
b1 /
b1 0
b100 1
13
#600000
b101 !
bx "
0#
b101 1
03
#650000
b110 !
bx "
1$
b110 1
14
#700000
b10 !
bx "
b10 /
b0 0
b10 1
#750000
b111111 !
bx "
0%
1)
b0 /
b111111 1
